// <auto-generated />
using System;
using JobManagement.Data;
using JobManagement.Models.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobManagement.Migrations
{
    [DbContext(typeof(JobManagementDbContext))]
    partial class JobManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobManagement.Models.Models.BaseUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<int>("UserType");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<int>("UserType");
                });

            modelBuilder.Entity("JobManagement.Models.Models.GalleryImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Image");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserId");

                    b.ToTable("GalleryImages");
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNCategory", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("NCategoryId");

                    b.HasKey("UserId", "NCategoryId");

                    b.HasIndex("NCategoryId");

                    b.ToTable("UserNCategories");
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNHealthStatus", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("NHealthStatusId");

                    b.HasKey("UserId", "NHealthStatusId");

                    b.HasIndex("NHealthStatusId");

                    b.ToTable("UserNHealthStatuses");
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNJobType", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("NJobTypeId");

                    b.HasKey("UserId", "NJobTypeId");

                    b.HasIndex("NJobTypeId");

                    b.ToTable("UserNJobTypes");
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNSkill", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("NSkillId");

                    b.HasKey("UserId", "NSkillId");

                    b.HasIndex("NSkillId");

                    b.ToTable("UsersNSkills");
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NBusinessSector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("N_BusinessSectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad98a5eb-5ef6-467f-9066-5006796c5895"),
                            Name = "Авиация, летища, авиолинии",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("b561410a-37bc-4ee3-ba15-340b089c1125"),
                            Name = "Автомобили, автосервизи, бензиностанции",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("6e58cce2-a5ef-4be6-a637-f3c158e03488"),
                            Name = "Архитектура и строителство",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("5e5f805e-bfbf-48aa-aca5-e0f2b74e2a87"),
                            Name = "Банки и кредитиране",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("d92769f9-fc60-4053-80e7-89c2ff3beef6"),
                            Name = "Бизнес, консултантски услуги",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("994c4796-6e4f-4205-b524-fe20f5ea9b36"),
                            Name = "Държавна администрация",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("1e5eab77-b8f5-4d84-94ff-a8c1d32c55cc"),
                            Name = "Електроника/електротехника/машиностроене",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("97e69d06-7974-4153-94d1-b8fc07c0d25d"),
                            Name = "Енергетика и ютилитис",
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("3201cf3e-e185-43e6-992b-14e8db4f03cd"),
                            Name = "Застраховане",
                            Position = 9
                        },
                        new
                        {
                            Id = new Guid("3a1076d8-85b7-4766-9da2-5cd5444170cd"),
                            Name = "Здравеопазване",
                            Position = 10
                        },
                        new
                        {
                            Id = new Guid("a0798825-6d0c-4ef8-9a85-f1734dc38970"),
                            Name = "Изкуство и забавление",
                            Position = 11
                        },
                        new
                        {
                            Id = new Guid("b75bdc04-d919-44e2-bd55-7db1f37026b7"),
                            Name = "Интернет/Електронна търговия",
                            Position = 12
                        },
                        new
                        {
                            Id = new Guid("ab622ef7-dbd7-4d31-9951-6790d62fa1e2"),
                            Name = "Информационни технологии",
                            Position = 13
                        },
                        new
                        {
                            Id = new Guid("1b56bfba-ca75-4800-8ca0-04265fbcc63f"),
                            Name = "Маркетинг/Реклама/ПР",
                            Position = 14
                        },
                        new
                        {
                            Id = new Guid("da305c32-d50c-42b3-86e5-01564241fdda"),
                            Name = "Медии",
                            Position = 15
                        },
                        new
                        {
                            Id = new Guid("64fac52f-9f6f-4ef2-8a74-80f51a8dfb4a"),
                            Name = "Недвижими имоти",
                            Position = 16
                        },
                        new
                        {
                            Id = new Guid("46bc5e3f-ec72-4aab-b7ff-b88c1fd1f54c"),
                            Name = "Образование, научна дейност",
                            Position = 17
                        },
                        new
                        {
                            Id = new Guid("7c2448cf-d0b4-47c0-9c3b-cc2bb9dac6fe"),
                            Name = "Организации с нестопанска цел",
                            Position = 18
                        },
                        new
                        {
                            Id = new Guid("8f0ab426-9ed7-4ace-bfc8-8b485747f3cd"),
                            Name = "Охрана",
                            Position = 19
                        },
                        new
                        {
                            Id = new Guid("1a2c82d3-62f8-42d8-ac5b-47b2cf136303"),
                            Name = "Правни и юридически услуги",
                            Position = 20
                        },
                        new
                        {
                            Id = new Guid("28e06c5f-a8a4-4da8-80af-678e35e858a8"),
                            Name = "Производство",
                            Position = 21
                        },
                        new
                        {
                            Id = new Guid("f77f4817-1a78-4671-bc71-36fc6b5af61b"),
                            Name = "Селско стопанство",
                            Position = 22
                        },
                        new
                        {
                            Id = new Guid("53ca96b6-393d-4463-bdb2-02bda224322b"),
                            Name = "Спорт и отдих",
                            Position = 23
                        },
                        new
                        {
                            Id = new Guid("418be391-8002-4963-a332-0b51ae14d3b7"),
                            Name = "Счетоводство/Финанси",
                            Position = 24
                        },
                        new
                        {
                            Id = new Guid("30b3a2d1-d80e-4f31-a907-260f00f64c55"),
                            Name = "Текстилна индустрия",
                            Position = 25
                        },
                        new
                        {
                            Id = new Guid("4bf32082-9f91-4bed-982c-eaea0d841696"),
                            Name = "Телекомуникации",
                            Position = 26
                        },
                        new
                        {
                            Id = new Guid("3174bf3f-673d-4351-8c89-77b3186a5285"),
                            Name = "Транспорт и логистика",
                            Position = 27
                        },
                        new
                        {
                            Id = new Guid("8647988f-bf86-4755-a345-f472567cdeda"),
                            Name = "Туризъм, хотели и ресторанти",
                            Position = 28
                        },
                        new
                        {
                            Id = new Guid("d4169a3e-6281-4e6a-9b31-4844531b7f92"),
                            Name = "Търговия",
                            Position = 29
                        },
                        new
                        {
                            Id = new Guid("20e34861-e8ca-40dd-9ef0-b25b5b8019ba"),
                            Name = "Услуги",
                            Position = 30
                        },
                        new
                        {
                            Id = new Guid("25848571-785d-41ef-8327-4734cbf3b217"),
                            Name = "Фармация",
                            Position = 31
                        },
                        new
                        {
                            Id = new Guid("d0e50cfc-ef31-4e2c-8c79-af30a42eeb27"),
                            Name = "Химия, горива и минно дело",
                            Position = 32
                        },
                        new
                        {
                            Id = new Guid("195cbfec-ad19-4def-b735-5d91b0ace98a"),
                            Name = "Хранителна промишленост",
                            Position = 33
                        },
                        new
                        {
                            Id = new Guid("8b372efd-97d1-45e0-9a70-5538482ce60b"),
                            Name = "Човешки ресурси",
                            Position = 34
                        },
                        new
                        {
                            Id = new Guid("0579d8f2-09d6-467c-8b11-ddf87fc23011"),
                            Name = "Друго",
                            Position = 35
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("NCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("286a89b4-7e02-4eb2-8ac9-8b61ad52bf0a"),
                            Name = "Всички",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("9c663aeb-41ba-4a6b-8b6c-4efbe022f80e"),
                            Name = "Авиация, Летища и Авиолинии",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("5cc6f7cd-1049-4d1d-971f-859eea95c8f0"),
                            Name = "Автомобили, Автосервизи, Бензиностанции",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("763b1b28-5cb7-4752-af83-f2b3ab9b50d5"),
                            Name = "Административни и офис дейности",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("ee78c33d-25a3-42c3-94d5-50711f592b7b"),
                            Name = "Архитектура, Строителство и Градоустройство",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("1aaad4a5-bf4c-4b8f-a572-5a7ad85df55b"),
                            Name = "Банки, Кредитиране",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("2f1f6dc1-bf09-47db-ab0f-773965bdce6e"),
                            Name = "Бизнес/Консултантски услуги",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("70de3920-b0f4-440c-af86-409c8ffc975a"),
                            Name = "Дизайн, Криейтив, Видео и Анимация",
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("1a842a87-390a-4ccc-93c0-c3d11feb8ccf"),
                            Name = "Енергетика и Ютилитис (Ток/Вода/Парно/Газ)",
                            Position = 9
                        },
                        new
                        {
                            Id = new Guid("50770e5e-de9f-474f-8d5a-d533b6d23064"),
                            Name = "Застраховане",
                            Position = 10
                        },
                        new
                        {
                            Id = new Guid("560a3abf-0df5-4691-bbd3-0b111a9cb7c8"),
                            Name = "Здравеопазване и фармация",
                            Position = 11
                        },
                        new
                        {
                            Id = new Guid("35eb9bae-a587-4040-9ca2-cf429125a7ca"),
                            Name = "Изкуство, Развлечение, Промоции",
                            Position = 12
                        },
                        new
                        {
                            Id = new Guid("89503e87-b3cc-4221-bff6-d57bd2f80c55"),
                            Name = "Изследователска и Развойна дейност (R&D)",
                            Position = 13
                        },
                        new
                        {
                            Id = new Guid("fec96e9f-2fb4-41fb-9258-134002341844"),
                            Name = "Инженери",
                            Position = 14
                        },
                        new
                        {
                            Id = new Guid("f6f5a415-0c2d-4005-9586-ad788c619973"),
                            Name = "Институции, Държавна администрация",
                            Position = 15
                        },
                        new
                        {
                            Id = new Guid("105134da-b114-4dea-862e-bd7b5285359d"),
                            Name = "ИТ - Административни дейности и продажби",
                            Position = 16
                        },
                        new
                        {
                            Id = new Guid("07647d93-b2c1-46ba-a74e-43958f633617"),
                            Name = "ИТ - Разработка/поддръжка на софтуер",
                            Position = 17
                        },
                        new
                        {
                            Id = new Guid("84545cad-0636-4460-a39e-9f2a62f54285"),
                            Name = "ИТ - Разработка/поддръжка на хардуер",
                            Position = 18
                        },
                        new
                        {
                            Id = new Guid("62ddab8d-374b-4632-b85f-e1e8a31a9415"),
                            Name = "Контакт центрове (Call Centers)",
                            Position = 19
                        },
                        new
                        {
                            Id = new Guid("aa589150-e846-442a-a81d-845b7b81262a"),
                            Name = "Маркетинг",
                            Position = 20
                        },
                        new
                        {
                            Id = new Guid("13f7656e-fca3-4462-85c2-cec60b7a13bd"),
                            Name = "Медии, Издателство",
                            Position = 21
                        },
                        new
                        {
                            Id = new Guid("79493136-fac5-417f-b5b6-c42f28dd81a9"),
                            Name = "Мениджмънт, Бизнес развитие",
                            Position = 22
                        },
                        new
                        {
                            Id = new Guid("9397d4bb-a2dc-4125-902b-df97bb9327e7"),
                            Name = "Морски и Речен транспорт",
                            Position = 23
                        },
                        new
                        {
                            Id = new Guid("ff63ceee-d5c7-41f8-80d1-fdabe4089302"),
                            Name = "Недвижими имоти",
                            Position = 24
                        },
                        new
                        {
                            Id = new Guid("bfdda6e6-9552-4e2a-8e9f-ce6df126744e"),
                            Name = "Образование, Курсове, Преводи",
                            Position = 25
                        },
                        new
                        {
                            Id = new Guid("acddb6dc-bb36-449f-b335-0397eab94e8b"),
                            Name = "Организации с нестопанска цел",
                            Position = 26
                        },
                        new
                        {
                            Id = new Guid("c2b2bfdd-689f-4273-aae7-7c8ed12dd31a"),
                            Name = "Почистване, Услуги за домакинството",
                            Position = 27
                        },
                        new
                        {
                            Id = new Guid("2f1ec69a-155b-4b15-8c0e-91747b9f0e21"),
                            Name = "Право, Юридически услуги",
                            Position = 28
                        },
                        new
                        {
                            Id = new Guid("4e12a0aa-e692-4245-9c23-d9fa242046d2"),
                            Name = "Производство - Електроника, Електротехника, Машиностроене",
                            Position = 29
                        },
                        new
                        {
                            Id = new Guid("00a030c6-826d-44b2-9510-40aed333f231"),
                            Name = "Производство - Мебели и Дърводелство",
                            Position = 30
                        },
                        new
                        {
                            Id = new Guid("4f82ca00-b5e5-48f3-9f17-3c92bd372745"),
                            Name = "Производство - Металургия и Минно дело",
                            Position = 31
                        },
                        new
                        {
                            Id = new Guid("70062d3d-13ea-4612-b7d5-4c98eee44b6c"),
                            Name = "Производство - Текстил и Облеклa",
                            Position = 32
                        },
                        new
                        {
                            Id = new Guid("5a4de6ae-c0c0-4529-97e5-6632d44751ae"),
                            Name = "Производство - Фармация",
                            Position = 33
                        },
                        new
                        {
                            Id = new Guid("8866c643-dfaf-4ecc-ae6f-ecf438c8693d"),
                            Name = "Производство - Химия и Горива",
                            Position = 34
                        },
                        new
                        {
                            Id = new Guid("47ea9a93-7897-4355-9786-77970d8fde38"),
                            Name = "Производство - Храни и Напитки",
                            Position = 35
                        },
                        new
                        {
                            Id = new Guid("632c2da6-a31c-4753-a2be-803f639974ba"),
                            Name = "Производство - Друго",
                            Position = 36
                        },
                        new
                        {
                            Id = new Guid("83167ca0-a659-4886-abb8-2726c5012976"),
                            Name = "Резервации и Туризъм",
                            Position = 37
                        },
                        new
                        {
                            Id = new Guid("6f8618ef-6916-4686-977f-3f3e96724391"),
                            Name = "Реклама, PR",
                            Position = 38
                        },
                        new
                        {
                            Id = new Guid("769953f2-e5ee-4565-9b3f-0783500cac4a"),
                            Name = "Ремонтни и Монтажни дейности",
                            Position = 39
                        },
                        new
                        {
                            Id = new Guid("d07ee232-5f54-45cf-bb63-665c0694a050"),
                            Name = "Ресторанти, Кетъринг",
                            Position = 40
                        },
                        new
                        {
                            Id = new Guid("965345c5-8fcc-4ec7-a573-bbd664657ff3"),
                            Name = "Салони за красота",
                            Position = 41
                        },
                        new
                        {
                            Id = new Guid("ae6500fd-6cc5-4447-9054-be879222b3b8"),
                            Name = "Селско и горско стопанство, Рибовъдство",
                            Position = 42
                        },
                        new
                        {
                            Id = new Guid("5c422ffa-6591-4e91-a791-3d6fac033059"),
                            Name = "Сигурност и Охрана",
                            Position = 43
                        },
                        new
                        {
                            Id = new Guid("b0104f7a-ebca-44de-b80d-da055d3df101"),
                            Name = "Спорт, Кинезитерапия",
                            Position = 44
                        },
                        new
                        {
                            Id = new Guid("e5bf3d05-1f5b-4aaf-b4fe-107483e56c41"),
                            Name = "Счетоводство, Одит, Финанси",
                            Position = 45
                        },
                        new
                        {
                            Id = new Guid("e33af43f-ef9a-4328-b256-641044bdfdf3"),
                            Name = "Телекомуникации - административни дейности и продажби",
                            Position = 46
                        },
                        new
                        {
                            Id = new Guid("11829776-7b9d-46cc-a09c-4922a3685596"),
                            Name = "Телекомуникации - инженери и техници",
                            Position = 47
                        },
                        new
                        {
                            Id = new Guid("e4179625-bbaf-489a-bf42-67a6c50ec025"),
                            Name = "Транспорт, Логистика, Спедиция",
                            Position = 48
                        },
                        new
                        {
                            Id = new Guid("716391e1-c9ee-4986-8bcf-a662f9a6e8f9"),
                            Name = "Търговия и продажби",
                            Position = 49
                        },
                        new
                        {
                            Id = new Guid("d46931b0-3bb1-4c7e-b766-dae022bae487"),
                            Name = "Физически/Ръчен труд",
                            Position = 50
                        },
                        new
                        {
                            Id = new Guid("9fa0afed-17a9-43b1-a9f2-a5d699cdc43c"),
                            Name = "Хотели",
                            Position = 51
                        },
                        new
                        {
                            Id = new Guid("2ef63f18-2508-4bc6-96b1-2f806e8a4c12"),
                            Name = "Човешки ресурси",
                            Position = 52
                        },
                        new
                        {
                            Id = new Guid("ed794ba8-c79c-457f-bf7d-a9fa2cf96ee2"),
                            Name = "Шофьори, Куриери",
                            Position = 53
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("NCountries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13e63ac5-c912-43c8-a7bf-8bcc1b811b12"),
                            Name = "България",
                            Position = 1
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("N_Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1cd0d768-6d04-4bc6-a9b2-de5b91f02431"),
                            Name = "Начално образование",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("8ba528e7-de68-4781-be16-84062d52e534"),
                            Name = "Гимназиално образование",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("ce72f886-a486-4c18-9a9f-1fe5b339505b"),
                            Name = "Средно образование",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("60ee7bc3-d424-43a6-a9cd-f7ae111340f3"),
                            Name = "Професионално училище/колеж",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("661fc49b-860e-46f4-a69b-de8415028eba"),
                            Name = "Бакалавърска степен",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("bf24831a-900a-4fb2-9170-8f7f15197ab2"),
                            Name = "Mагистърска степен",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("326b309b-905d-4293-ab0b-5fa91ddb3e1a"),
                            Name = "Докторска степен",
                            Position = 7
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NGender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("NGenders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0dc36894-ea41-4fc3-98a5-b9c091c07350"),
                            Name = "Мъж",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("6ec29a78-b51a-4337-b446-1b58f083c4a1"),
                            Name = "Жена",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("30670687-35a6-42ec-b026-f2e3afce20fe"),
                            Name = "Предпочитам да не отговарям",
                            Position = 3
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NHealthStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("NHealthStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8322b682-2148-4cfe-86a7-e0835c624f14"),
                            Name = "Слухови",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("7bb42913-a907-4d4a-b292-198d364a02c6"),
                            Name = "Зрителни",
                            Position = 2
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NJobType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("NJobTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3a3eeb1-bf3a-47f6-9bfd-b530dd75e7d1"),
                            Name = "Всички",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("de516972-59b8-4caa-9729-ed0e8e1becb6"),
                            Name = "Постоянна работа",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("d5c6debb-0266-4534-b9e2-584176ba2f89"),
                            Name = "Временна/сезонна работа",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("b930c124-7d9d-47cd-9a65-4c1e2d3b433a"),
                            Name = "Стаж",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("bed507bf-abd2-40f6-af7e-3ca94abcdfa1"),
                            Name = "Пълно работно време",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("c04ed9fb-1afb-47f5-9bf6-a8d62179d84c"),
                            Name = "Непълно работно време",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("360fd237-f870-454c-89ef-fb239551938b"),
                            Name = "Подходяща и за студенти",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("cb3cf4ab-0f3c-4b8a-83c6-6c185b3adc09"),
                            Name = "Подходяща и за кандидати с малък или без опит",
                            Position = 8
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("NSkills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("518f0675-d97d-48c1-874a-c755ef960f2c"),
                            Name = "Плуване",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("adf7bbb3-edf8-4593-95ed-2c1ac1ab48c7"),
                            Name = "Четене",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("1a96815a-9cb1-4eb8-988f-aaec3d7bd03d"),
                            Name = "Рисуване",
                            Position = 3
                        });
                });

            modelBuilder.Entity("JobManagement.Models.Nomenclatures.NTown", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("NTowns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eb331abb-37a5-4358-b4c9-1ac5ff2cdacd"),
                            Name = "Пловдив",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("2ebb913e-d3fc-4049-81dd-fb6e100ba5c1"),
                            Name = "София",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("9e51e5f1-b33d-4b63-a01e-bfbf09aa2600"),
                            Name = "Варна",
                            Position = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("JobManagement.Models.Models.AdministrationUser", b =>
                {
                    b.HasBaseType("JobManagement.Models.Models.BaseUser");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("JobManagement.Models.Models.BusinessUser", b =>
                {
                    b.HasBaseType("JobManagement.Models.Models.BaseUser");

                    b.Property<string>("AdditionalDescription");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("NBusinessSectorId");

                    b.Property<Guid?>("NCountryBusinessnUser");

                    b.Property<Guid>("NCountryId");

                    b.Property<Guid?>("NTownBusinessUser");

                    b.Property<Guid>("NTownId");

                    b.Property<string>("ProfileImageStr");

                    b.HasIndex("NBusinessSectorId");

                    b.HasIndex("NCountryBusinessnUser");

                    b.HasIndex("NTownBusinessUser");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("JobManagement.Models.Models.User", b =>
                {
                    b.HasBaseType("JobManagement.Models.Models.BaseUser");

                    b.Property<string>("AdditionalDescription")
                        .HasColumnName("User_AdditionalDescription");

                    b.Property<DateTime>("BdayDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("NCountryId")
                        .HasColumnName("User_NCountryId");

                    b.Property<Guid?>("NCountrynUser");

                    b.Property<Guid?>("NEducationId");

                    b.Property<Guid>("NGenderId");

                    b.Property<Guid>("NTownId")
                        .HasColumnName("User_NTownId");

                    b.Property<Guid?>("NTownUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ProfileImageStr")
                        .HasColumnName("User_ProfileImageStr");

                    b.Property<string>("TelеphoneNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("VisibilityProfile");

                    b.HasIndex("NCountrynUser");

                    b.HasIndex("NEducationId");

                    b.HasIndex("NGenderId");

                    b.HasIndex("NTownUser");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("JobManagement.Models.Models.GalleryImage", b =>
                {
                    b.HasOne("JobManagement.Models.Models.User", "CreatedByUser")
                        .WithMany("CreatedByGalleryImages")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("JobManagement.Models.Models.User", "ModifiedByUser")
                        .WithMany("ModifiedByGalleryImages")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("JobManagement.Models.Models.User", "User")
                        .WithMany("GalleryImages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNCategory", b =>
                {
                    b.HasOne("JobManagement.Models.Nomenclatures.NCategory", "NCategory")
                        .WithMany("UserNSkills")
                        .HasForeignKey("NCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobManagement.Models.Models.User", "User")
                        .WithMany("UserNCategories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNHealthStatus", b =>
                {
                    b.HasOne("JobManagement.Models.Nomenclatures.NHealthStatus", "NHealthStatus")
                        .WithMany("UserNHealthStatus")
                        .HasForeignKey("NHealthStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobManagement.Models.Models.User", "User")
                        .WithMany("UserNHealthStatuses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNJobType", b =>
                {
                    b.HasOne("JobManagement.Models.Nomenclatures.NJobType", "NJobType")
                        .WithMany("UserNJobTypes")
                        .HasForeignKey("NJobTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobManagement.Models.Models.User", "User")
                        .WithMany("UserNJobTypes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("JobManagement.Models.Models.UserNSkill", b =>
                {
                    b.HasOne("JobManagement.Models.Nomenclatures.NSkill", "NSkill")
                        .WithMany("UserNSkills")
                        .HasForeignKey("NSkillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobManagement.Models.Models.User", "User")
                        .WithMany("UserNSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("JobManagement.Models.Models.BaseUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("JobManagement.Models.Models.BaseUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobManagement.Models.Models.BaseUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("JobManagement.Models.Models.BaseUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JobManagement.Models.Models.BusinessUser", b =>
                {
                    b.HasOne("JobManagement.Models.Nomenclatures.NBusinessSector", "NBusinessSector")
                        .WithMany("BusinessUsers")
                        .HasForeignKey("NBusinessSectorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobManagement.Models.Nomenclatures.NCountry", "NCountry")
                        .WithMany()
                        .HasForeignKey("NCountryBusinessnUser");

                    b.HasOne("JobManagement.Models.Nomenclatures.NTown", "NTown")
                        .WithMany("BusinessUsers")
                        .HasForeignKey("NTownBusinessUser");
                });

            modelBuilder.Entity("JobManagement.Models.Models.User", b =>
                {
                    b.HasOne("JobManagement.Models.Nomenclatures.NCountry", "NCountry")
                        .WithMany("Users")
                        .HasForeignKey("NCountrynUser");

                    b.HasOne("JobManagement.Models.Nomenclatures.NEducation", "NEducation")
                        .WithMany("Users")
                        .HasForeignKey("NEducationId");

                    b.HasOne("JobManagement.Models.Nomenclatures.NGender", "NGender")
                        .WithMany("Users")
                        .HasForeignKey("NGenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobManagement.Models.Nomenclatures.NTown", "NTown")
                        .WithMany("Users")
                        .HasForeignKey("NTownUser");
                });
#pragma warning restore 612, 618
        }
    }
}
